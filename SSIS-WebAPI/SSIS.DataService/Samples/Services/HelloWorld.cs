// --------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SQL PLUS Code Generation Utility.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//     Underlying Query: HelloWorld
//     Last Modified On: 5/2/2023 10:18:15 PM
//     Written By: Alan@SQLPlus.net
//     Visit https://www.SQLPLUS.net for more information about the SQL PLUS build time ORM.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------
namespace SSIS.DataService.Samples
{
    #region Using Statments

    using SSIS.DataService.Samples.Models;
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using System.Threading;

    #endregion Using Statements

    /// <summary>
    /// This file contains the source code for the HelloWorld routine.
    /// </summary>
    public partial class Service
    {
        #region Build SqlCommand

        private SqlCommand HelloWorld_BuildCommand(SqlConnection cnn, HelloWorldInput input)
        {
            SqlCommand result = new SqlCommand()
            {
                CommandType = CommandType.Text,
                CommandText = @"
SELECT CONCAT('Hello ', @Name, ', Welcome to SQL+')  AS WelcomMessage;
IF @@ROWCOUNT = 0
BEGIN
SET @ReturnValue=0;
END;
ELSE
BEGIN
SET @ReturnValue = 1;
END;",
                Connection = cnn
            };

            result.Parameters.Add(new SqlParameter()
            {
                ParameterName = "@Name",
                Direction = ParameterDirection.Input,
                SqlDbType = SqlDbType.VarChar,
                Size = 32,
                Value = input.Name
            });

            result.Parameters.Add(new SqlParameter()
            {
                ParameterName = "@ReturnValue",
                Direction = ParameterDirection.Output,
                SqlDbType = SqlDbType.Int,
                Value = DBNull.Value
            });

            return result;
        }

        #endregion Build SqlCommand

        #region Read Output Parameters And Return Value

        private void HelloWorld_SetParameters(SqlCommand cmd, HelloWorldOutput output)
        {
            if(cmd.Parameters[1].Value != DBNull.Value)
            {
                output.ReturnValue = (HelloWorldOutput.Returns)cmd.Parameters[1].Value;
            }
        }

        #endregion Read Output Parameters And Return Value

        #region Reader To Result Objects
        
        private HelloWorldResult HelloWorld_ResultData(SqlDataReader rdr)
        {
            return new HelloWorldResult(
            rdr.GetString(0)
            );
        }
    
        #endregion Reader To Result Objects

        #region Execute Command

        private void HelloWorld_Execute(SqlCommand cmd, HelloWorldOutput output)
        {
            using (SqlDataReader rdr = cmd.ExecuteReader())
            {
                if(rdr.Read())
                {
                    output.ResultData = HelloWorld_ResultData(rdr);
                }
                rdr.Close();
            }

            HelloWorld_SetParameters(cmd, output);
        }

        #endregion Execute Command

        #region Public Service

        /// <summary>
        /// Simple service to return a welcome message based on the users name.<br/>
        /// DB Routine: dbo.HelloWorld<br/>
        /// Author: Alan@SQLPlus.net<br/>
        /// </summary>
        /// <param name="input">HelloWorldInput instance.</param>
        /// <returns>Instance of HelloWorldOutput</returns>
        public HelloWorldOutput HelloWorld(HelloWorldInput input)
        {
            ValidateInput(input, nameof(HelloWorld));
            HelloWorldOutput output = new HelloWorldOutput();
			if(sqlConnection != null)
            {
                using (SqlCommand cmd = HelloWorld_BuildCommand(sqlConnection, input))
                {
                    cmd.Transaction = sqlTransaction;
                    HelloWorld_Execute(cmd, output);
                }
                return output;
            }
            for(int idx=0; idx <= retryOptions.RetryIntervals.Count; idx++)
            {
                if (idx > 0)
                {
                    Thread.Sleep(retryOptions.RetryIntervals[idx - 1]);
                }
                try
                {
                    using (SqlConnection cnn = new SqlConnection(connectionString))
                    using (SqlCommand cmd = HelloWorld_BuildCommand(cnn, input))
                    {
                        cnn.Open();
						HelloWorld_Execute(cmd, output);
                        cnn.Close();
                    }
					break;
                }
                catch(SqlException sqlException)
                {
                    AllowRetryOrThrowError(idx, sqlException);
                }
            }
            return output;
        }

        #endregion

    }
}

