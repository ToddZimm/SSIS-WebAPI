// --------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SQL  Code Generation Utility.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//     Underlying Query: ExeuctionMessages
//     Last Modified On: 5/7/2023 1:23:35 PM
//     Written By: Todd Zimmerman
//     Select Type: MultiRow
//     Visit https://www.SQLPLUS.net for more information about the SQL Plus build time ORM.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------
namespace SSIS.DataService.SSISDB.Models
{
    #nullable enable


    #region usings

    using System;
    using System.Collections.Generic;

    #endregion usings

    /// <summary>
    /// Output object for ExeuctionMessages service.
    /// </summary>
    public partial class ExeuctionMessagesOutput
    {

        #region Output Parameters

        /// <summary>
        /// Maps to parameter @Count.
        /// </summary>
        public int? Count { set; get; }

	    #endregion Output Parameters

        #region Result Data

        /// <summary>
        /// List of ExeuctionMessagesResult.
        /// </summary>
        public List<ExeuctionMessagesResult>? ResultData { set; get; }

        #endregion Result Data
    }



    #region Result Set Objects

    /// <summary>
    /// Result object for ExeuctionMessages service.
    /// </summary>




    public partial class ExeuctionMessagesResult
	{
        /// <summary>
        /// Result set object for ExeuctionMessages.
        /// </summary>
        /// <param name="MessageId">Maps to table value column MessageId.</param>
        /// <param name="ExecutionId">Maps to table value column ExecutionId.</param>
        /// <param name="CreatedAt">Maps to table value column CreatedAt.</param>
        /// <param name="MessageTypeId">Maps to table value column MessageTypeId.</param>
        /// <param name="MessageTypeName">Maps to table value column MessageTypeName.</param>
        /// <param name="MessageSourceId">Maps to table value column MessageSourceId.</param>
        /// <param name="MessageSourceName">Maps to table value column MessageSourceName.</param>
        /// <param name="Message">Maps to table value column Message.</param>
        public ExeuctionMessagesResult(long MessageId, long ExecutionId, DateTimeOffset CreatedAt, short MessageTypeId, string MessageTypeName, short? MessageSourceId, string MessageSourceName, string? Message)
        {
             this.MessageId = MessageId;
             this.ExecutionId = ExecutionId;
             this.CreatedAt = CreatedAt;
             this.MessageTypeId = MessageTypeId;
             this.MessageTypeName = MessageTypeName;
             this.MessageSourceId = MessageSourceId;
             this.MessageSourceName = MessageSourceName;
             this.Message = Message;
        }


        /// <summary>
        /// Maps to table value column MessageId.
        /// </summary>
        public long MessageId { set; get; }

        /// <summary>
        /// Maps to table value column ExecutionId.
        /// </summary>
        public long ExecutionId { set; get; }

        /// <summary>
        /// Maps to table value column CreatedAt.
        /// </summary>
        public DateTimeOffset CreatedAt { set; get; }

        /// <summary>
        /// Maps to table value column MessageTypeId.
        /// </summary>
        public short MessageTypeId { set; get; }

        /// <summary>
        /// Maps to table value column MessageTypeName.
        /// </summary>
        public string MessageTypeName { set; get; }

        /// <summary>
        /// Maps to table value column MessageSourceId.
        /// </summary>
        public short? MessageSourceId { set; get; }

        /// <summary>
        /// Maps to table value column MessageSourceName.
        /// </summary>
        public string MessageSourceName { set; get; }

        /// <summary>
        /// Maps to table value column Message.
        /// </summary>
        public string? Message { set; get; }
    }


    #endregion Result Set Objects

}
